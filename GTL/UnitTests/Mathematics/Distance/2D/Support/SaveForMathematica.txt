#if 0
//Vector2<double> center{ -0.75, -2.58 };  // EllipsePointsZM
//Vector2<double> center{ 0.0, -2.58 };  // EllipsePointsPM
//Vector2<double> center{ -1.75, -2.58 };  // EllipsePointsMMa
Vector2<double> center{ -2.9, -2.58 };  // EllipsePointsMMb and EllipsePointsMMc
//double lambda = 1.0;  // EllipsePointsZM, EllipsePointsPM, EllipsePointsMMa 
double lambda = 1.2 / 1.8;  // EllipsePointsMMc
Vector2<double> U0 = { 1.0, 1.0 }, U1 = { 1.0, -1.0 };
Normalize(U0);
Normalize(U1);
double e0 = 4.0, e1 = 0.5;
std::ofstream ellipseFile("EllipsePointsMMc.txt");
for (std::size_t i = 0; i < 1024; ++i)
{
    double angle = GTE_C_TWO_PI * static_cast<double>(i) / 1024.0;
    Vector2<double> point = center + lambda * (e0 * std::cos(angle) * U0 + e1 * std::sin(angle) * U1);
    ellipseFile << std::setprecision(17) << point[0] << ", " << point[1] << std::endl;
}
ellipseFile.close();
#endif